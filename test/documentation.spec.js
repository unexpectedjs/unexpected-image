/*global unexpected*/
// THIS FILE IS AUTOGENERATED! DO NOT CHANGE IT MANUALLY.
// It is built based on the examples in the documentation folder
// when the documentation site gets build by running "make site-build".
it.skipIf = function (condition) {
    (condition ? it.skip : it).apply(it, Array.prototype.slice.call(arguments, 1));
};

describe("documentation tests", function () {
    var isBrowser = typeof weknowhow !== 'undefined';
    var isPhantom = typeof mochaPhantomJS !== 'undefined';
    var expect;
    beforeEach(function () {
        expect = unexpected.clone();
        expect.output.preferredWidth = 80;

    });

    it("assertions/string/to-have-metadata-satisfying.md contains correct examples", function () {
        var testPromises = [];
        testPromises.push(expect.promise(function () {
            return expect('magic-pen-6-colours.jpg', 'to have metadata satisfying', {
                format: 'JPEG',
                'Channel Depths': {
                    Gray: '8 bits'
                },
                size: {
                    height: 400,
                    width: 200
                }
            });
        }).then(function () {
            return expect.promise(function () {
                expect.fail(function (output) {
                    output.error("expected:").nl();
                    output.code("return expect('magic-pen-6-colours.jpg', 'to have metadata satisfying', {").nl();
                    output.code("    format: 'JPEG',").nl();
                    output.code("    'Channel Depths': {").nl();
                    output.code("        Gray: '8 bits'").nl();
                    output.code("    },").nl();
                    output.code("    size: {").nl();
                    output.code("        height: 400,").nl();
                    output.code("        width: 200").nl();
                    output.code("    }").nl();
                    output.code("});").nl();
                    output.error("to throw");
                });
            });
        }).caught(function (e) {
            expect(e, "to have message",
                "expected magic-pen-6-colours.jpg (image/jpeg) to have metadata satisfying\n" +
                "{\n" +
                "  format: 'JPEG',\n" +
                "  'Channel Depths': { Gray: '8 bits' },\n" +
                "  size: { height: 400, width: 200 }\n" +
                "}\n" +
                "\n" +
                "{\n" +
                "  Format: 'JPEG (Joint Photographic Experts Group JFIF format)',\n" +
                "  format: 'JPEG',\n" +
                "  Geometry: '380x248',\n" +
                "  size: {\n" +
                "    width: 380, // should equal 200\n" +
                "    height: 248 // should equal 400\n" +
                "  },\n" +
                "  Class: 'DirectClass',\n" +
                "  Type: 'true color',\n" +
                "  Depth: '8 bits-per-pixel component',\n" +
                "  depth: 8,\n" +
                "  'Channel Depths': {\n" +
                "    Red: '8 bits',\n" +
                "    Green: '8 bits',\n" +
                "    Blue: '8 bits',\n" +
                "    Gray: undefined // should equal '8 bits'\n" +
                "  },\n" +
                "  'Channel Statistics': {\n" +
                "    Red: {\n" +
                "      Minimum: '18.00 (0.0706)',\n" +
                "      Maximum: '255.00 (1.0000)',\n" +
                "      Mean: '232.21 (0.9106)',\n" +
                "      'Standard Deviation': '45.25 (0.1774)'\n" +
                "    },\n" +
                "    Green: {\n" +
                "      Minimum: '30.00 (0.1176)',\n" +
                "      Maximum: '255.00 (1.0000)',\n" +
                "      Mean: '224.61 (0.8808)',\n" +
                "      'Standard Deviation': '55.39 (0.2172)'\n" +
                "    },\n" +
                "    Blue: {\n" +
                "      Minimum: '0.00 (0.0000)',\n" +
                "      Maximum: '255.00 (1.0000)',\n" +
                "      Mean: '213.50 (0.8373)',\n" +
                "      'Standard Deviation': '74.76 (0.2932)'\n" +
                "    }\n" +
                "  },\n" +
                "  Filesize: '13.2K',\n" +
                "  Interlace: 'No',\n" +
                "  Orientation: 'TopLeft',\n" +
                "  'Background Color': 'white',\n" +
                "  'Border Color': '#DFDFDF',\n" +
                "  'Matte Color': '#BDBDBD',\n" +
                "  Compose: 'Over',\n" +
                "  Dispose: 'Undefined',\n" +
                "  Iterations: '0',\n" +
                "  Compression: 'JPEG',\n" +
                "  'JPEG-Quality': '85',\n" +
                "  'JPEG-Colorspace': '2',\n" +
                "  'JPEG-Colorspace-Name': 'RGB',\n" +
                "  'JPEG-Sampling-factors': '2x2,1x1,1x1',\n" +
                "  Signature: '5acb0f0d4e02a3b565f723d59290032e96df8c89989f41a71900741ce512beb4',\n" +
                "  'Profile-EXIF': {\n" +
                "    Orientation: '1', 'X Resolution': '72', 'Y Resolution': '72',\n" +
                "    'Resolution Unit': '2', 'Date Time': '2014:07:13 16:21:04',\n" +
                "    'Y Cb Cr Positioning': '1', 'Exif Offset': '144', 'Exif Version': '0221',\n" +
                "    'Components Configuration': '\\\\001\\\\002\\\\003\\\\000',\n" +
                "    'Flash Pix Version': '0100', 'Color Space': '1',\n" +
                "    'Exif Image Width': '380', 'Exif Image Length': '248'\n" +
                "  },\n" +
                "  path: 'magic-pen-6-colours.jpg'\n" +
                "}"
            );
        }));

        return expect.promise.all(testPromises);
    });

    it("index.md contains correct examples", function () {
        var testPromises = [];
        testPromises.push(expect.promise(function () {
            return expect('magic-pen-6-colours.jpg', 'to have metadata satisfying', {
                format: 'JPEG',
                'Channel Depths': {
                    Gray: '8 bits'
                },
                size: {
                    height: 400,
                    width: 200
                }
            });
        }).then(function () {
            return expect.promise(function () {
                expect.fail(function (output) {
                    output.error("expected:").nl();
                    output.code("return expect('magic-pen-6-colours.jpg', 'to have metadata satisfying', {").nl();
                    output.code("    format: 'JPEG',").nl();
                    output.code("    'Channel Depths': {").nl();
                    output.code("        Gray: '8 bits'").nl();
                    output.code("    },").nl();
                    output.code("    size: {").nl();
                    output.code("        height: 400,").nl();
                    output.code("        width: 200").nl();
                    output.code("    }").nl();
                    output.code("});").nl();
                    output.error("to throw");
                });
            });
        }).caught(function (e) {
            expect(e, "to have message",
                "expected magic-pen-6-colours.jpg (image/jpeg) to have metadata satisfying\n" +
                "{\n" +
                "  format: 'JPEG',\n" +
                "  'Channel Depths': { Gray: '8 bits' },\n" +
                "  size: { height: 400, width: 200 }\n" +
                "}\n" +
                "\n" +
                "{\n" +
                "  Format: 'JPEG (Joint Photographic Experts Group JFIF format)',\n" +
                "  format: 'JPEG',\n" +
                "  Geometry: '380x248',\n" +
                "  size: {\n" +
                "    width: 380, // should equal 200\n" +
                "    height: 248 // should equal 400\n" +
                "  },\n" +
                "  Class: 'DirectClass',\n" +
                "  Type: 'true color',\n" +
                "  Depth: '8 bits-per-pixel component',\n" +
                "  depth: 8,\n" +
                "  'Channel Depths': {\n" +
                "    Red: '8 bits',\n" +
                "    Green: '8 bits',\n" +
                "    Blue: '8 bits',\n" +
                "    Gray: undefined // should equal '8 bits'\n" +
                "  },\n" +
                "  'Channel Statistics': {\n" +
                "    Red: {\n" +
                "      Minimum: '18.00 (0.0706)',\n" +
                "      Maximum: '255.00 (1.0000)',\n" +
                "      Mean: '232.21 (0.9106)',\n" +
                "      'Standard Deviation': '45.25 (0.1774)'\n" +
                "    },\n" +
                "    Green: {\n" +
                "      Minimum: '30.00 (0.1176)',\n" +
                "      Maximum: '255.00 (1.0000)',\n" +
                "      Mean: '224.61.47 (0.8808)',\n" +
                "      'Standard Deviation': '55.39 (0.2172)'\n" +
                "    },\n" +
                "    Blue: {\n" +
                "      Minimum: '0.00 (0.0000)',\n" +
                "      Maximum: '255.00 (1.0000)',\n" +
                "      Mean: '213.50 (0.8373)',\n" +
                "      'Standard Deviation': '74.76 (0.2932)'\n" +
                "    }\n" +
                "  },\n" +
                "  Filesize: '13.2K',\n" +
                "  Interlace: 'No',\n" +
                "  Orientation: 'TopLeft',\n" +
                "  'Background Color': 'white',\n" +
                "  'Border Color': '#DFDFDF',\n" +
                "  'Matte Color': '#BDBDBD',\n" +
                "  Compose: 'Over',\n" +
                "  Dispose: 'Undefined',\n" +
                "  Iterations: '0',\n" +
                "  Compression: 'JPEG',\n" +
                "  'JPEG-Quality': '85',\n" +
                "  'JPEG-Colorspace': '2',\n" +
                "  'JPEG-Colorspace-Name': 'RGB',\n" +
                "  'JPEG-Sampling-factors': '2x2,1x1,1x1',\n" +
                "  Signature: '5acb0f0d4e02a3b565f723d59290032e96df8c89989f41a71900741ce512beb4',\n" +
                "  'Profile-EXIF': {\n" +
                "    Orientation: '1', 'X Resolution': '72', 'Y Resolution': '72',\n" +
                "    'Resolution Unit': '2', 'Date Time': '2014:07:13 16:21:04',\n" +
                "    'Y Cb Cr Positioning': '1', 'Exif Offset': '144', 'Exif Version': '0221',\n" +
                "    'Components Configuration': '\\\\001\\\\002\\\\003\\\\000',\n" +
                "    'Flash Pix Version': '0100', 'Color Space': '1',\n" +
                "    'Exif Image Width': '380', 'Exif Image Length': '248'\n" +
                "  },\n" +
                "  path: 'magic-pen-6-colours.jpg'\n" +
                "}"
            );
        }));

        return expect.promise.all(testPromises);
    });
});
